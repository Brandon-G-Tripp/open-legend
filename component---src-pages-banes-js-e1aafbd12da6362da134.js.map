{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/searchbar-banes-boons.js","webpack://gatsby-starter-default/./src/components/banes/single-item-bane.js","webpack://gatsby-starter-default/./src/components/banes/banes-page-content.js","webpack://gatsby-starter-default/./src/pages/banes/[...].js"],"names":["useStyles","makeStyles","root","boxShadow","flexGrow","backgroundColor","display","theme","appBar","search","position","borderRadius","fade","marginRight","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","formControl","margin","minWidth","white","selectEmpty","marginTop","clearIconButton","addIconButton","inputLabel","SearchBarBanesBoons","props","classes","updateTextSearch","textSearchVal","handleClearSearchText","React","powerLevel","setPowerLevel","attribute","setAttribute","chipData","setChipData","handleMouseDown","event","className","disableGutters","placeholder","value","input","inputProps","onChange","endAdornment","aria-label","onClick","onMouseDown","shrink","id","labelId","displayEmpty","key","item","updateSearchParams","baneSection","fontSize","toolbar","backButton","backIcon","banesNames","bane","SingleItemPageBane","navigate","container","disableRipple","href","index","style","lineHeight","parseStrToHtml","baneAttributes","marginBottom","baneContainer","backgroundImage","baneAccordion","paddingTop","paddingBottom","maxHeight","overflow","accordBtnContainer","accordionBtn","left","minHeight","background","fontWeight","accordionExpanded","individualBaneLink","location","useState","queryString","searchParams","setSearchParams","setTextSearchVal","visibility","setVisibility","baneHeadings","attributeList","currentLocation","headings","regex","RegExp","data","show","matched","Object","paramKeys","powerLevels","powerParam","i","param","slugName","title","e","path","url","navigator","effect","basepath"],"mappings":"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","file":"component---src-pages-banes-js-e1aafbd12da6362da134.js","sourcesContent":["import React from 'react';\n\nimport SearchChip from './search-chip';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n    flexGrow: 1,\n    backgroundColor: 'rgb(81,45,168)',\n    display: 'block',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  appBar: {\n    boxShadow: 'none', \n    backgroundColor: 'rgb(81,45,168)'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(5),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    '& *': {\n      color: theme.palette.common.white,\n    },\n    '&:focused': {\n      color: theme.palette.common.white,\n    }\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  clearIconButton: {\n    color: theme.palette.common.white,\n  },\n  addIconButton: {\n    color: theme.palette.common.white,\n  },\n  inputLabel: {\n    root: {\n      '&:focused': {\n        color: theme.palette.common.white\n\n      }\n    }\n  }\n}));\n\nexport default function SearchBarBanesBoons(props) {\n  const classes = useStyles();\n  const updateTextSearch = props.updateTextSearch, textSearchVal = props.textSearchVal, handleClearSearchText = props.handleClearSearchText;\n\n  const [powerLevel, setPowerLevel] = React.useState('');\n  const [attribute, setAttribute] = React.useState('');\n  const [chipData, setChipData] = React.useState([]);\n\n  const handleChangePower = (event) => {\n    setPowerLevel(event.target.value);\n  }\n  \n  const handleChangeAttribute = (event) => {\n    setAttribute(event.target.value);\n  }\n\n  const handleMouseDown = (event) => {\n    event.preventDefault();\n  }\n\n  const handleSubmitAttrs = () => {\n    if (attribute !== '' && powerLevel !== '') {\n      setChipData([attribute, powerLevel]);\n    }\n  }\n\n  \n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' className={classes.appBar}>\n        <Toolbar disableGutters >\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={textSearchVal}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={updateTextSearch}\n              endAdornment={\n                <InputAdornment position='end'  >\n                  <IconButton\n                    className={classes.clearIconButton}\n                    aria-label='clear search field'\n                    onClick={handleClearSearchText}\n                    onMouseDown={handleMouseDown}\n                  >\n                    {textSearchVal.length > 0 ? <ClearIcon />  : null}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </div>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel className={classes.inputLabel} shrink id=\"attribute-select\">\n              Attribute\n            </InputLabel>\n            <Select\n              labelId=\"attribute-select\"\n              id=\"attribute\"\n              value={attribute}\n              onChange={handleChangeAttribute}\n              displayEmpty\n              className={classes.selectEmpty}\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n              {\n                props.attributeList.map((item, index )=> {\n                  return (\n                    <MenuItem key={index} value={item}>{item}</MenuItem>\n                  )\n                })\n              }\n            </Select>\n            <FormHelperText>Attribute with Power</FormHelperText>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel className={classes.inputLabel} shrink id=\"power-level-select\">\n              Power Level\n            </InputLabel>\n            <Select\n              labelId=\"power-level-select\"\n              id=\"power-level\"\n              value={powerLevel}\n              onChange={handleChangePower}\n              displayEmpty\n              className={classes.selectEmpty}\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n              <MenuItem value={9}>9</MenuItem>\n              <MenuItem value={8}>8</MenuItem>\n              <MenuItem value={7}>7</MenuItem>\n              <MenuItem value={6}>6</MenuItem>\n              <MenuItem value={5}>5</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n            </Select>\n            <FormHelperText>Equal to or Less Than</FormHelperText>\n          </FormControl>\n\n          <IconButton\n            className={classes.addIconButton}\n            aria-label='submit attribute filter'\n            onClick={handleSubmitAttrs}\n            onMouseDown={handleMouseDown}\n          >\n            <AddIcon /> \n          </IconButton>\n\n          <SearchChip \n            chipData={chipData}\n            attribute={attribute} \n            powerLevel={powerLevel} \n            updateSearchParams={props.updateSearchParams}\n          /> \n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n}","import { navigate } from 'gatsby-link';\nimport React from 'react';\n\nimport YMLBanes from \"../../core-rules/banes/banes.yml\";\nimport {default as parseStrToHtml} from 'html-react-parser';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles(({\n  baneSection: {\n    fontSize: '16px',\n    margin: '24px'\n  },\n  toolbar: {\n    backgroundColor: 'rgba(81,45,168, 0.9)',\n    color: 'rgba(255,255,255,0.87)',\n    fontSize: '20px',\n  },\n  backButton: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  backIcon: {\n    color: 'rgba(255,255,255,0.87)',\n  }\n}))\n\nconst banesNames = YMLBanes.map(bane => bane.name.toLowerCase().replace(/\\s+/, '-'))\n\nexport default function SingleItemPageBane(props) {\n  const classes = useStyles();\n\n  if (banesNames.indexOf(props.bane) === -1) {\n    navigate('/banes')\n  }\n    return (\n      <div className={classes.container}>\n        <Toolbar className={classes.toolbar}> \n          <IconButton disableRipple href='/banes' className={classes.backButton} >\n            <ArrowBackIcon  className={classes.backIcon} />\n          </IconButton>\n            Back To Bane List\n        </Toolbar>\n        <div className={classes.baneSection}>\n          {\n          YMLBanes.map((bane, index) => {\n            if(bane.name.toLowerCase().replace(/\\s+/, '-') === props.bane) {\n              return (\n                <div key={index}>\n                  <h2 id={bane.name} style={{ lineHeight: '40px' }}>\n                    {bane.name}\n                  </h2>\n                  <p><strong>Duration: </strong>{bane.duration}</p>\n                  <p><strong>Power Level: </strong>{bane.power.map((item, index) => {\n                      if (index < bane.power.length - 1) return `${item}/ `;\n                      return item;\n                    })}\n                  </p>\n                  <p><strong>Attack Attributes: </strong>{bane.attackAttributes.map((item, index) => {\n                      if (index < bane.attackAttributes.length - 1) return `${item}, `;\n                      return item;\n                    })}\n                  </p>\n                  <p><strong>Attack: </strong></p>\n                  <p></p>\n                  <ul>\n                    {bane.attack.map((item, index) => {\n                      return (\n                        <li key={index}>{item}</li>\n                      )\n                    })}\n                  </ul>\n                  <p><strong>Description</strong></p>\n                  <p>{bane.description}</p>\n                  <p><strong>Effect</strong></p>\n                  <div>{parseStrToHtml(bane.effect)}</div>\n                  <p></p> \n                </div>\n                )\n              } \n          })}\n        </div>\n      </div>\n    )\n}","import React, { useState } from 'react';\n\nimport {default as parseStrToHtml} from 'html-react-parser';\nimport * as queryString from 'query-string';\n\nimport Image from '../../img/paper_bg.png';\nimport SearchBarBanesBoons from '../searchbar-banes-boons';\nimport YMLBanes from \"../../core-rules/banes/banes.yml\";\nimport CoreTOC from '../core-toc';\n\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport LinkIcon from '@material-ui/icons/Link';\n\n\nconst baneAttributes = [\n  'Creation',\n  'Energy',\n  'Entropy',\n  'Influence',\n  'Might',\n  'Persuasion',\n  'Presence',\n  'Alteration',\n  'Agility',\n  'Movement',\n  'Prescience',\n  'Protection',\n  'Deception'\n]\n\nconst useStyles = makeStyles((theme) => ({\n  baneSection: {\n    fontSize: '16px',\n    '& li': {\n      marginBottom: '16px'\n    }\n  },\n  baneContainer: {\n    backgroundImage: `url(${Image})`,\n    margin: '0 24px',\n  },\n  baneAccordion: {\n    paddingTop: '16px',\n    paddingBottom: '16px',\n    fontSize: '16px',\n    maxHeight: '9999px',\n    display: 'block',\n    transition: 'height .6s linear',\n    overflow: 'hidden',\n  },\n  accordBtnContainer: {\n    display: 'inline-block',\n    margin: '8px 0',\n    fontSize: '16px'\n  },\n  accordionBtn: {\n    justifyContent: 'start',\n    left: 5,\n    padding: '0 6px',\n    margin: '6px 8px',\n    lineHeight: '36px',\n    minHeight: '36px',\n    background: 'transparent',\n    minWidth: '88px',\n    fontWeight: '500',\n    width: '100%',\n    position: 'relative',\n    alignItems: 'center',\n    display: 'flex'\n  },\n  accordionExpanded: {\n    maxHeight: 0,\n    paddingTop: '16px',\n    paddingBottom: '16px',\n    fontSize: '16px',\n    display: 'block',\n    transition: 'height .6s linear',\n    overflow: 'hidden',\n  },\n  individualBaneLink: {\n    backgroundColor: 'rgba(89,65,160,0.7)',\n    position: 'relative',\n    marginLeft: '16px',\n    height: '30px',\n    width: '30px',\n    minWidth: 0,\n    lineHeight: '40px',\n    borderRadius: '50%',\n    boxShadow: '0 2px 5px 0 rgba(0, 0, 0, 0.26)',\n  },\n}))\n\nconst BanesPageContent = ({ location }) => {\n  const classes = useStyles();\n\n  const [searchParams, setSearchParams] = useState(queryString.parse(location.search));\n  const [textSearchVal, setTextSearchVal] = useState('');\n  const [visibility, setVisibility] = useState(true);\n\n  \n  const updateSearchParams = (currentLocation) => {\n    setSearchParams(queryString.parse(currentLocation.search))\n  }\n  \n  const updateTextSearch = (event) => {\n    setTextSearchVal(event.target.value);\n  }\n\n  const handleClearSearchText = () => {\n    setTextSearchVal('')\n  }\n\n  const handleVisibility = () => {\n    setVisibility(!visibility);\n  }\n\n  const handleCopyToClipboard = param => e => {\n    e.preventDefault();\n    const path = `${location.pathname}/${param}`.replace('//', '/')\n    const url = `${location.origin}${path}`;\n    navigator.clipboard.writeText(url).then(() => {}, () => {})\n  }\n\n\n  let baneHeadings = [];\n\n  return (\n\n    <div>\n      <SearchBarBanesBoons \n        attributeList={baneAttributes} \n        textSearchVal={textSearchVal} \n        updateTextSearch={updateTextSearch} \n        updateSearchParams={updateSearchParams} \n        handleClearSearchText={handleClearSearchText}\n      /> \n      <CoreTOC headings={baneHeadings} />\n      <div className={classes.baneContainer}>\n        <div className={classes.accordBtnContainer} >\n          <ButtonBase onClick={handleVisibility} className={classes.accordionBtn} >\n            {visibility ? <RemoveIcon /> : <AddIcon />}\n            {visibility ? 'HIDE EXPLANATION' : 'SHOW EXPLANATION'}\n          </ButtonBase>\n        </div>\n        <div className={`${visibility ? classes.banesAccordion : classes.accordionExpanded}`}>\n          <h1>BANES</h1>\n          <h2>Reading a Bane Description</h2>\n          <p>Below, each bane description includes the following elements.</p>\n          <p><strong>Power Level. </strong>This number indicates the required attribute score needed to inflict the bane. If multiple power levels are listed (such as 2 / 4 / 6), then the bane can be inflicted at multiple tiers of power. The Persistent Damage bane, for example, deals increased damage as you inflict it at higher power levels.</p>\n          <p><strong>Attack Attributes. </strong>This is a list of the attribute or attributes that can be used to inflict the bane. As long as you possess at least one of the listed attributes at a score greater than or equal to the Power Level, then you can inflict the bane.</p>\n          <p><strong>Attack. </strong>This list indicates what type of attack roll to make when inflicting the bane. Each entry consists of an attribute that the attacking player should roll and the defense score targeted by the attack. If the attacker’s roll equals or exceeds the target’s defense score, then the bane is inflicted.</p>\n          <p><strong>Duration. </strong>A bane typically remains in effect until the target resists it using a resist action, hence most banes have a duration of “resist ends”. If a target fails three resist rolls against a bane, the bane can no longer be resisted. It persists for an extended duration indicated in parentheses.</p>\n          <p><strong>Description. </strong>This entry simply provides a general idea of what the bane could look like in the story.</p>\n          <p><strong>Effect. </strong>This entry indicates the mechanical effects of the bane on the rules of the game.</p>\n          <p></p>\n          <Divider />\n        </div>\n\n        \n        {YMLBanes.map((data, index) => {\n          if (textSearchVal !== '') {\n            const regex = new RegExp(textSearchVal, 'gi');\n            let show = false;\n            show = data.name.match(regex) || data.description.match(regex) || data.effect.match(regex);\n            if(!show) return null;\n          }\n\n          const matched = [];\n          data.attackAttributes.forEach(item => {\n            const paramKeys = Object.keys(searchParams)?.map(item => item.toLowerCase());\n            if (paramKeys.indexOf(item.toLowerCase()) > -1) matched.push(item);\n          });\n          const powerLevels = Object.values(searchParams)?.map(powerParam => {\n            // console.log('power levels', data.power)\n            for (let i = 0; i < powerParam.length; i++) {\n              if (data.power[i] <= powerParam ) return true;\n            }\n            return false;\n          });\n\n          if (Object.keys(searchParams)?.length > 0 && matched?.length < 1) return null;\n          if (powerLevels[0] === false) return null;\n\n          \n\n          baneHeadings.push(data.name);\n\n          const slugName = data.name.toLowerCase().replace(/\\s+/, '-')\n\n          return (\n            <div className={classes.baneSection} key={index}>\n              <h2 id={slugName} style={{ lineHeight: '40px', marginBottom: '36px'  }}>\n                {data.name}\n                <Tooltip title='View this Bane'>\n                  <IconButton className={classes.individualBaneLink} href={'/banes' + `/${slugName}`}>\n                    <ReplyIcon />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title='Copy Link'>\n                  <IconButton className={classes.individualBaneLink} onClick={handleCopyToClipboard(slugName)}>\n                    <LinkIcon />\n                  </IconButton>\n                </Tooltip>\n              </h2>\n              <p></p>\n              <p></p>\n              <p><strong>Duration: </strong>{data.duration}</p>\n              <p><strong>Power Level: </strong>{data.power.map((item, index) => {\n                  if (index < data.power.length - 1) return `${item}/ `;\n                  return item;\n                })}\n              </p>\n              <p><strong>Attack Attributes: </strong>{data.attackAttributes.map((item, index) => {\n                  if (index < data.attackAttributes.length - 1) return `${item}, `;\n                  return item;\n                })}\n              </p>\n              <p><strong>Attack: </strong></p>\n              <p></p>\n              <ul>\n                {data.attack.map((item, index) => {\n                  return (\n                    <li key={index}>{item}</li>\n                  )\n                })}\n              </ul>\n              <p><strong>Description</strong></p>\n              <p>{data.description}</p>\n              <p><strong>Effect</strong></p>\n              <div className={classes.effect}>{parseStrToHtml(data.effect)}</div>\n              <p></p> \n              <Divider />\n            </div>\n          )\n        })\n        }\n        {/* <OpenLegendFooter />  */}\n      </div>\n    </div>\n  ) \n}\n\nexport default BanesPageContent;","import React from \"react\";\nimport { Router } from '@reach/router';\n\nimport SingleItemBane from '../../components/banes/single-item-bane';\nimport NavLayout from '../../layouts/nav-layout';\nimport BanesPageContent from '../../components/banes/banes-page-content';\n\nconst BanesPage = ({ location }) => {\n\n  return (\n      <NavLayout >\n        <Router basepath='/banes'>\n          <BanesPageContent path='/' location={location} /> \n          <SingleItemBane path='/:bane' />\n        </Router>\n      </NavLayout>\n  )\n};\n\nexport default BanesPage"],"sourceRoot":""}