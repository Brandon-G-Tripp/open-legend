{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/feats/single-item-feat.js","webpack://gatsby-starter-default/./src/components/feats/searchbar-feats.js","webpack://gatsby-starter-default/./src/components/feats/feats-page-content.js","webpack://gatsby-starter-default/./src/pages/feats/[...].js"],"names":["useStyles","makeStyles","featSection","fontSize","margin","toolbar","backgroundColor","color","backButton","backIcon","featNames","feat","SingleItemPageFeat","props","classes","navigate","className","container","disableRipple","href","key","index","id","style","lineHeight","Object","capTier","item","tierNum","acc","attrs","singleAttr","multiAttrs","console","parseStrToHtml","root","boxShadow","flexGrow","display","theme","appBar","search","position","borderRadius","fade","marginRight","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","formControl","minWidth","white","selectEmpty","marginTop","clearIconButton","addIconButton","inputLabel","formTitle","SearchBarFeats","updateTextSearch","textSearchVal","handleClearSearchText","React","comparison","setComparison","cost","setCost","handleMouseDown","event","disableGutters","placeholder","value","input","inputProps","onChange","endAdornment","aria-label","onClick","onMouseDown","variant","shrink","labelId","displayEmpty","searchParams","featsContainer","divider","accordBtnContainer","accordionBtn","left","minHeight","background","fontWeight","featsAccordion","paddingTop","paddingBottom","maxHeight","overflow","accordionExpanded","individualFeatLink","location","useState","queryString","setSearchParams","setTextSearchVal","visibility","setVisibility","featHeadings","updateSearchParams","currentLocation","headings","data","param","slugName","marginBottom","title","e","path","url","navigator","basepath"],"mappings":"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","file":"component---src-pages-feats-js-89674f02d12008fe3de5.js","sourcesContent":["import { navigate } from 'gatsby-link';\nimport React from 'react';\n\nimport YMLFeats from \"../../core-rules/feats/feats.yml\";\nimport {default as parseStrToHtml} from 'html-react-parser';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\n\nconst useStyles = makeStyles(({\n  featSection: {\n    fontSize: '16px',\n    margin: '24px'\n  },\n  toolbar: {\n    backgroundColor: 'rgba(81,45,168, 0.9)',\n    color: 'rgba(255,255,255,0.87)',\n    fontSize: '20px',\n  },\n  backButton: {\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  backIcon: {\n    color: 'rgba(255,255,255,0.87)',\n  }\n}));\n\nconst featNames = YMLFeats.map(feat => feat.name.toLowerCase().replace(/\\(/, '!').split(' !')[0].replace(/\\s+/g, '-'))\n\nexport default function SingleItemPageFeat(props) {\n  const classes = useStyles();\n\n  if (featNames.indexOf(props.feat) === -1) {\n    navigate('/boons')\n  }\n    return (\n      <div className={classes.container}>\n        <Toolbar className={classes.toolbar}> \n          <IconButton disableRipple href='/feats' className={classes.backButton} >\n            <ArrowBackIcon  className={classes.backIcon} />\n          </IconButton>\n            Back To Feats List\n        </Toolbar>\n        <div className={classes.featSection}>\n          {\n          YMLFeats.map((feat, index) => {\n            if(feat.name.toLowerCase().replace(/\\(/, '!').split(' !')[0].replace(/\\s+/g, '-') === props.feat) {\n              return (\n                <div key={index}>\n                  <h2 id={feat.name} style={{ lineHeight: '40px' }}>\n                    {feat.name}\n                  </h2>\n                  <p><strong>Cost: </strong>\n                    {feat.cost.toString()} {feat.cost.length > 1 ? 'points' : 'point'}\n                  </p>\n                  <p><strong>Prerequisites: </strong></p>\n                  <ul>\n                    <ul>\n                    {\n                      Object.entries(feat.prerequisites).map((item, index) => {\n                        const capTier = item[0].charAt(0).toUpperCase() + item[0].slice(1,4);\n                        const tierNum = item[0].slice(4);\n                        if(Object.keys(item[1])[0] === 'Other') {\n                          return (\n                            <li key={index}>\n                              <strong>{`${capTier} ${tierNum}:`} </strong> \n                              {`${Object.values(item[1])[0]}`}\n                            </li>\n                          )\n                        } \n                        else if(Object.entries(item[1])[0][0] === 'Feat' ) {\n                          return (\n                            <li key={`${capTier}${index}`}>\n                              <strong>{`${capTier} ${tierNum}:`} </strong> \n                              {`Feat: ${item[1]['Feat'].reduce((acc, currentVal) => {\n                                  return acc +` ${currentVal},` \n                                }, '').slice(0, -1)}`}\n                            </li>\n                          )\n                        } else if (Object.entries(item[1])[0][0] === 'Attribute'){\n                          if (Object.entries(item[1])[1] !== undefined) {\n                            // Get attr values for thos with feats\n                            let attrs = '';\n                            Object.entries(Object.values(item[1])[0]).forEach(item => {\n                              attrs += Object.keys(item[1])[0] + ' ' + Object.values(item[1])[0] +', or ' \n                            })\n                            // Get feat values\n                            let feat = 'Feat: '+ Object.entries(Object.values(item[1])[1])[0][1]\n                            return (\n                                <li key={index + capTier}>\n                                  <strong>{`${capTier} ${tierNum}:`} </strong> \n                                  <ul>\n                                    <li>\n                                      {attrs.slice(0, -5)}\n                                    </li>\n                                    <li key={`${index}${capTier}Feat`}>\n                                      {feat}\n                                    </li>\n                                  </ul>\n                                </li>\n                            )\n                          } else {\n                            const singleAttr = ' ' + Object.keys(Object.entries(Object.values(item[1])[0])[0][1])[0] \n                              + ' ' + Object.values(Object.entries(Object.values(item[1])[0])[0][1])[0];\n                            return (\n                              <li key={index}>\n                                <strong>{`${capTier} ${tierNum}:`} </strong> \n                                  {singleAttr}\n                              </li>\n                            )\n                          }\n                        } else {\n                          const multiAttrs = item[1]['any']['Attribute'].reduce((acc, currentVal) => {\n                            return acc += `${Object.keys(currentVal)[0]} ${Object.values(currentVal)[0]}, or `;\n                          }, '').slice(0, -5);\n                            console.log('attr item', multiAttrs)\n                            return (\n                              <li key={index + item}>\n                                <strong>{`${capTier} ${tierNum}:`} </strong> \n                                {`${multiAttrs}`}\n                              </li>\n                            )\n                        } \n                      })\n                    }\n                    </ul>\n                  </ul>\n                  <p><strong>Description</strong></p>\n                  <p>{feat.description}</p>\n                  <p><strong>Effect</strong></p>\n                  <div>{parseStrToHtml(feat.effect)}</div>\n                  <p></p> \n                </div>\n                )\n              } \n          })}\n        </div>\n      </div>\n    )\n}","import React from 'react';\n\nimport SearchChip from '../search-chip';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBase from '@material-ui/core/InputBase';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport searchParams from '../../utils/searchParams';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n    flexGrow: 1,\n    backgroundColor: 'rgb(81,45,168)',\n    display: 'block',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  appBar: {\n    boxShadow: 'none', \n    backgroundColor: 'rgb(81,45,168)'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(5),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    '& *': {\n      color: theme.palette.common.white,\n    },\n    '&:focused': {\n      color: theme.palette.common.white,\n    }\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n  clearIconButton: {\n    color: theme.palette.common.white,\n  },\n  addIconButton: {\n    color: theme.palette.common.white,\n  },\n  inputLabel: {\n    root: {\n      '&:focused': {\n        color: theme.palette.common.white\n\n      }\n    }\n  },\n  formTitle: {\n    marginRight: '16px',\n  }\n}));\n\nexport default function SearchBarFeats(props) {\n  const classes = useStyles();\n  const updateTextSearch = props.updateTextSearch, textSearchVal = props.textSearchVal, handleClearSearchText = props.handleClearSearchText;\n\n  const [comparison, setComparison] = React.useState('');\n  const [cost, setCost] = React.useState('');\n\n  const handleChangeComparison = (event) => {\n    setComparison(event.target.value);\n  }\n  \n  const handleChangeCost = (event) => {\n    setCost(event.target.value);\n  }\n\n  const handleMouseDown = (event) => {\n    event.preventDefault();\n  }\n\n  const handleSubmitComparison = () => {\n    if (cost !== '' && comparison !== '') {\n      searchParams(comparison, cost, props.updateSearchParams)\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position='static' className={classes.appBar}>\n        <Toolbar disableGutters >\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              value={textSearchVal}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n              onChange={updateTextSearch}\n              endAdornment={\n                <InputAdornment position='end'  >\n                  <IconButton\n                    className={classes.clearIconButton}\n                    aria-label='clear search field'\n                    onClick={handleClearSearchText}\n                    onMouseDown={handleMouseDown}\n                  >\n                    {textSearchVal.length > 0 ? <ClearIcon />  : null}\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </div>\n          <Typography variant='h6' className={classes.formTitle}>Cost Is:    </Typography>\n          <FormControl className={classes.formControl}>\n            <InputLabel className={classes.inputLabel} shrink id=\"cost-select\">\n            </InputLabel>\n            <Select\n              labelId=\"cost-select\"\n              id=\"cost\"\n              value={cost}\n              onChange={handleChangeCost}\n              displayEmpty\n              className={classes.selectEmpty}\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n              <MenuItem value={1}>1</MenuItem>\n              <MenuItem value={2}>2</MenuItem>\n              <MenuItem value={3}>3</MenuItem>\n              <MenuItem value={4}>4</MenuItem>\n            </Select>\n            <FormHelperText>Attribute with Power</FormHelperText>\n          </FormControl>\n\n          <FormControl className={classes.formControl}>\n            <InputLabel className={classes.inputLabel} shrink id=\"power-level-select\">\n            </InputLabel>\n            <Select\n              labelId=\"power-level-select\"\n              id=\"power-level\"\n              value={comparison}\n              onChange={handleChangeComparison}\n              displayEmpty\n              className={classes.selectEmpty}\n            >\n              <MenuItem value=\"\">\n                <em>All</em>\n              </MenuItem>\n              <MenuItem value={'or Greater'}>or Greater</MenuItem>\n              <MenuItem value={'Exactly'}>Exactly</MenuItem>\n              <MenuItem value={'or Less'}>or Less</MenuItem>\n            </Select>\n            <FormHelperText>Feat Cost Comparison</FormHelperText>\n          </FormControl>\n\n          <IconButton\n            className={classes.addIconButton}\n            aria-label='submit attribute filter'\n            onClick={handleSubmitComparison}\n            onMouseDown={handleMouseDown}\n          >\n            <AddIcon /> \n          </IconButton>\n          \n        </Toolbar>\n      </AppBar>\n    </div>\n  )\n\n}","import React, { useState } from \"react\"\n\nimport {default as parseStrToHtml} from 'html-react-parser';\nimport * as queryString from 'query-string';\n\nimport SearchBarFeats from './searchbar-feats';\nimport YMLFeats from \"../../core-rules/feats/feats.yml\";\nimport CoreTOC from '../core-toc';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport IconButton from '@material-ui/core/IconButton';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport AddIcon from '@material-ui/icons/Add';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport LinkIcon from '@material-ui/icons/Link';\n\n\nconst useStyles = makeStyles({\n  featsContainer: {\n    fontSize: '16px',\n    margin: '0 24px'\n  },\n  divider: {\n    marginTop: '16px'\n  },\n  accordBtnContainer: {\n    display: 'inline-block',\n    margin: '8px 0',\n    fontSize: '16px'\n  },\n  accordionBtn: {\n    justifyContent: 'start',\n    left: 5,\n    padding: '0 6px',\n    margin: '6px 8px',\n    lineHeight: '36px',\n    minHeight: '36px',\n    background: 'transparent',\n    minWidth: '88px',\n    fontWeight: '500',\n    width: '100%',\n    position: 'relative',\n    alignItems: 'center',\n    display: 'flex'\n  },\n  featsAccordion: {\n    paddingTop: '16px',\n    paddingBottom: '16px',\n    fontSize: '16px',\n    maxHeight: '9999px',\n    display: 'block',\n    transition: 'height .6s linear',\n    overflow: 'hidden',\n  },\n  accordionExpanded: {\n    maxHeight: 0,\n    paddingTop: '16px',\n    paddingBottom: '16px',\n    fontSize: '16px',\n    display: 'block',\n    transition: 'height .6s linear',\n    overflow: 'hidden',\n  },\n  individualFeatLink: {\n    backgroundColor: 'rgba(89,65,160,0.7)',\n    position: 'relative',\n    marginLeft: '16px',\n    height: '30px',\n    width: '30px',\n    minWidth: 0,\n    lineHeight: '40px',\n    borderRadius: '50%',\n    boxShadow: '0 2px 5px 0 rgba(0, 0, 0, 0.26)',\n  },\n})\n\nconst FeatsPage = ({ location }) => {\n  const classes = useStyles();\n\n  const [searchParams, setSearchParams] = useState(queryString.parse(location.search));\n  const [textSearchVal, setTextSearchVal] = useState('');\n  const [visibility, setVisibility] = useState(true);\n\n  const updateSearchParams = (currentLocation) => {\n    console.log('searchParams', queryString.parse(currentLocation.search))\n    setSearchParams(queryString.parse(currentLocation.search))\n  }\n  \n  const updateTextSearch = (event) => {\n    setTextSearchVal(event.target.value);\n  }\n\n  const handleClearSearchText = () => {\n    setTextSearchVal('')\n  }\n\n  const handleVisibility = () => {\n    setVisibility(!visibility);\n  }\n\n  const handleCopyToClipboard = param => e => {\n    e.preventDefault();\n    const path = `${location.pathname}/${param}`.replace('//', '/')\n    const url = `${location.origin}${path}`;\n    navigator.clipboard.writeText(url).then(() => {}, () => {})\n  }\n\n  let featHeadings = [];\n\n  return (\n    <div>\n      <SearchBarFeats\n        textSearchVal={textSearchVal}\n        updateTextSearch={updateTextSearch}\n        updateSearchParams={updateSearchParams}\n        handleClearSearchText={handleClearSearchText}\n      />\n      <CoreTOC headings={featHeadings} />\n      <div className={classes.featsContainer}>\n        <div className={classes.accordBtnContainer} >\n          <ButtonBase onClick={handleVisibility} className={classes.accordionBtn} >\n            {visibility ? <RemoveIcon /> : <AddIcon />}\n            {visibility ? 'HIDE EXPLANATION' : 'SHOW EXPLANATION'}\n          </ButtonBase>\n        </div>\n        <div className={`${visibility ? classes.featsAccordion : classes.accordionExpanded}`}>\n          <h1>FEATS</h1>\n          <h2>Reading a Feat Description</h2>\n          <p>Below, each feat description includes the following elements.</p>\n          <p><strong>Cost. </strong>This is the number of feat points required to take this feat. Characters get 6 feat points at 1st level, and 3 feat points each time they level up. If the feat has multiple tiers, the cost is the same for each tier and must be paid every time the feat is purchased at a new tier unless otherwise noted in the feat description. So, to access the Tier 5 ability of a feat, you must pay for the feat 5 times. If a feat does not have a noted exception it can only be purchased once.</p>\n          <p><strong>Prerequisites. </strong>Feats can have prerequisites that you must meet when you select it. They can either require a minimum attribute score or they can sometimes require other feats.</p>\n          <p><strong>Description. </strong>This entry simply provides a general idea of what the feat could look like in the story.</p>\n          <p><strong>Effect. </strong>This entry indicates the mechanical effects of the feat on the rules of the game.</p>\n          <p></p>\n          <Divider />\n        </div>\n        {YMLFeats.map((data, index) => {\n\n          featHeadings.push(data.name);\n\n          const slugName = data.name.toLowerCase().replace(/\\(/, '!').split(' !')[0].replace(/\\s+/g, '-');\n\n          return (\n            <div className='feats-section'>\n              <h2 id={slugName} style={{ lineHeight: '40px', marginBottom: '36px'  }}>\n                {data.name}\n                <Tooltip title='View this Feat'>\n                  <IconButton className={classes.individualFeatLink} href={'/feats' + `/${slugName}`}>\n                    <ReplyIcon />\n                  </IconButton>\n                </Tooltip>\n                <Tooltip title='Copy Link'>\n                  <IconButton className={classes.individualFeatLink} onClick={handleCopyToClipboard(slugName)}>\n                    <LinkIcon />\n                  </IconButton>\n                </Tooltip>\n              </h2>\n              <p><strong>Cost: </strong>{data.cost.toString()} {data.cost.length > 1 ? 'points' : 'point'}</p>\n              <p><strong>Prerequisites</strong></p>\n              <ul>\n                  <ul>\n                    {\n                      Object.entries(data.prerequisites).map((item, index) => {\n                        const capTier = item[0].charAt(0).toUpperCase() + item[0].slice(1,4);\n                        const tierNum = item[0].slice(4);\n                        if(Object.keys(item[1])[0] === 'Other') {\n                          return (\n                            <li key={index}>\n                              <strong>{`${capTier} ${tierNum}:`} </strong> \n                              {`${Object.values(item[1])[0]}`}\n                            </li>\n                          )\n                        } \n                        else if(Object.entries(item[1])[0][0] === 'Feat' ) {\n                          return (\n                            <li key={`${capTier}${index}`}>\n                              <strong>{`${capTier} ${tierNum}:`} </strong> \n                              {`Feat: ${item[1]['Feat'].reduce((acc, currentVal) => {\n                                  return acc +` ${currentVal},` \n                                }, '').slice(0, -1)}`}\n                            </li>\n                          )\n                        } else if (Object.entries(item[1])[0][0] === 'Attribute'){\n                          if (Object.entries(item[1])[1] !== undefined) {\n                            // Get attr values for thos with feats\n                            let attrs = '';\n                            Object.entries(Object.values(item[1])[0]).forEach(item => {\n                              attrs += Object.keys(item[1])[0] + ' ' + Object.values(item[1])[0] +', or ' \n                            })\n                            // Get feat values\n                            let feat = 'Feat: '+ Object.entries(Object.values(item[1])[1])[0][1]\n                            return (\n                                <li key={index + capTier}>\n                                  <strong>{`${capTier} ${tierNum}:`} </strong> \n                                  <ul>\n                                    <li>\n                                      {attrs.slice(0, -5)}\n                                    </li>\n                                    <li key={`${index}${capTier}Feat`}>\n                                      {feat}\n                                    </li>\n                                  </ul>\n                                </li>\n                            )\n                          } else {\n                            const singleAttr = ' ' + Object.keys(Object.entries(Object.values(item[1])[0])[0][1])[0] \n                              + ' ' + Object.values(Object.entries(Object.values(item[1])[0])[0][1])[0];\n                            return (\n                              <li key={index}>\n                                <strong>{`${capTier} ${tierNum}:`} </strong> \n                                  {singleAttr}\n                              </li>\n                            )\n                          }\n                        } else {\n                          const multiAttrs = item[1]['any']['Attribute'].reduce((acc, currentVal) => {\n                            return acc += `${Object.keys(currentVal)[0]} ${Object.values(currentVal)[0]}, or `;\n                          }, '').slice(0, -5);\n\n                            return (\n                              <li key={index + item}>\n                                <strong>{`${capTier} ${tierNum}:`} </strong> \n                                {`${multiAttrs}`}\n                              </li>\n                            )\n                        } \n                      })\n                    }\n                    </ul>\n                  </ul>\n              <p>{data.power}</p>\n              <p><strong>Description:</strong></p>\n              <p>{data.description}</p>\n              <p><strong>Effect</strong></p>\n              {parseStrToHtml(data.effect)}\n              {data.special ? \n                <div>\n                  <p><strong>Special</strong></p> \n                  {parseStrToHtml(data.special)} \n                </div>\n              : null}\n              <Divider className={classes.divider} /> \n            </div>\n          )\n        })\n        }\n      </div>\n    </div>\n  )\n}\nexport default FeatsPage;","import React from \"react\";\nimport { Router } from '@reach/router';\n\nimport SingleItemFeat from '../../components/feats/single-item-feat';\nimport NavLayout from '../../layouts/nav-layout';\nimport FeatsPageContent from '../../components/feats/feats-page-content';\n\nconst FeatsPage = ({ location }) => {\n\n  return (\n      <NavLayout >\n        <Router basepath='/feats'>\n          <FeatsPageContent path='/' location={location} /> \n          <SingleItemFeat path='/:feat' />\n        </Router>\n      </NavLayout>\n  )\n};\n\nexport default FeatsPage;"],"sourceRoot":""}